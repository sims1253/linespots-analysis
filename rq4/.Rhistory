library(brms)
library(tidyverse)
library(bayesplot)
library(loo)
options(mc.cores = parallel::detectCores())
d = read_delim('../combined.csv',
delim = ",",
locale = locale(decimal_mark = "."),
col_names = TRUE,
col_types = cols(
AUCEC = col_double(),
Algorithm = col_factor(),
Commits = col_double(),
Depth = col_double(),
Domain = col_factor(),
EXAM = col_double(),
FixCount = col_double(),
Fixed = col_double(),
Future = col_double(),
LOC = col_double(),
Missed = col_double(),
Origin = col_double(),
Project = col_factor(),
Source = col_factor(),
Choice = col_factor(),
Time = col_factor(),
Weighting = col_factor(),
fn = col_double(),
fp = col_double(),
hdMax = col_double(),
hdMaxLOC = col_double(),
tn = col_double(),
tp = col_double()
)
)
d = read_delim('/../combined.csv',
delim = ",",
locale = locale(decimal_mark = "."),
col_names = TRUE,
col_types = cols(
AUCEC = col_double(),
Algorithm = col_factor(),
Commits = col_double(),
Depth = col_double(),
Domain = col_factor(),
EXAM = col_double(),
FixCount = col_double(),
Fixed = col_double(),
Future = col_double(),
LOC = col_double(),
Missed = col_double(),
Origin = col_double(),
Project = col_factor(),
Source = col_factor(),
Choice = col_factor(),
Time = col_factor(),
Weighting = col_factor(),
fn = col_double(),
fp = col_double(),
hdMax = col_double(),
hdMaxLOC = col_double(),
tn = col_double(),
tp = col_double()
)
)
setwd("~/Documents/dev/linespots/linespots-analysis/")
d = read_delim('combined.csv',
delim = ",",
locale = locale(decimal_mark = "."),
col_names = TRUE,
col_types = cols(
AUCEC = col_double(),
Algorithm = col_factor(),
Commits = col_double(),
Depth = col_double(),
Domain = col_factor(),
EXAM = col_double(),
FixCount = col_double(),
Fixed = col_double(),
Future = col_double(),
LOC = col_double(),
Missed = col_double(),
Origin = col_double(),
Project = col_factor(),
Source = col_factor(),
Choice = col_factor(),
Time = col_factor(),
Weighting = col_factor(),
fn = col_double(),
fp = col_double(),
hdMax = col_double(),
hdMaxLOC = col_double(),
tn = col_double(),
tp = col_double()
)
)
setwd("~/Documents/dev/linespots/linespots-analysis/rq4")
d = read_delim('../data.csv',
delim = ",",
locale = locale(decimal_mark = "."),
col_names = TRUE,
col_types = cols(
AUCEC = col_double(),
Algorithm = col_factor(),
Commits = col_double(),
Depth = col_double(),
Domain = col_factor(),
EXAM = col_double(),
FixCount = col_double(),
Fixed = col_double(),
Future = col_double(),
LOC = col_double(),
Missed = col_double(),
Origin = col_double(),
Project = col_factor(),
Source = col_factor(),
Choice = col_factor(),
Time = col_factor(),
Weighting = col_factor(),
fn = col_double(),
fp = col_double(),
hdMax = col_double(),
hdMaxLOC = col_double(),
tn = col_double(),
tp = col_double()
)
)
# Lets look at some boxplots first
boxplot(EXAM ~ Algorithm, data = d)
boxplot(AUCEC ~ Algorithm, data = d, outline=FALSE)
m1.1 = brm(
formula = EXAM ~ 1,
data = d,
family=Beta(),
prior = c(
prior(normal(0,0.5), class=Intercept),
prior(gamma(0.1, 0.1), class=phi)
),
chains = 4,
cores = parallel::detectCores(),
)
m1.2 = brm(
formula = EXAM ~ 1 + Algorithm,
data = d,
family=Beta(),
prior = c(
prior(normal(0,0.5), class=Intercept),
prior(normal(0,0.1), class=b),
prior(gamma(0.1, 0.1), class=phi)
),
chains = 4,
cores = parallel::detectCores(),
)
m1.3 = brm(
formula = EXAM ~ 1 + Algorithm + (1|Project),
data = d,
family=Beta(),
prior = c(
prior(normal(0,0.5), class=Intercept),
prior(normal(0,0.1), class=b),
prior(cauchy(0,0.5), class=sd),
prior(gamma(0.1, 0.1), class=phi)
),
chains = 4,
cores = parallel::detectCores(),
)
m1.4 = brm(
formula = EXAM ~ 1 + Algorithm + (1|Domain),
data = d,
family=Beta(),
prior = c(
prior(normal(0,0.5), class=Intercept),
prior(normal(0,0.1), class=b),
prior(cauchy(0,0.5), class=sd),
prior(gamma(0.1, 0.1), class=phi)
),
chains = 4,
cores = parallel::detectCores(),
)
m1.5 = brm(
formula = EXAM ~ 1 + Algorithm + (1|Project) + (1|Domain),
data = d,
family=Beta(),
prior = c(
prior(normal(0,0.5), class=Intercept),
prior(normal(0,0.1), class=b),
prior(cauchy(0,0.5), class=sd),
prior(gamma(0.1, 0.1), class=phi)
),
chains = 4,
cores = parallel::detectCores(),
)
loo1.1 = loo(m1.1)
loo1.2 = loo(m1.2)
loo1.3 = loo(m1.3)
loo1.4 = loo(m1.4)
loo1.5 = loo(m1.5)
loo_compare(loo1.1, loo1.2, loo1.3, loo1.4, loo1.5)
summary(m1.3)
summary(m1.5)
stanplot(m1.3, type="hist")
stanplot(m1.3, type="dens_overlay")
stanplot(m1.3, type="areas")
stanplot(m1.3, type="areas", pars="b_")
# Looks like Linespots is performing significantly better.
stanplot(m1.3, type="areas", pars="sd_")
# We repeat the same process for the AUCEC output.
m2.1 = brm(
formula = AUCEC ~ 1,
data = ls.df,
family=Beta(),
prior = c(
prior(normal(0,0.5), class=Intercept),
prior(gamma(0.1, 0.1), class=phi)
),
chains = 4,
cores = parallel::detectCores(),
)
m2.1 = brm(
formula = AUCEC ~ 1,
data = d,
family=Beta(),
prior = c(
prior(normal(0,0.5), class=Intercept),
prior(gamma(0.1, 0.1), class=phi)
),
chains = 4,
cores = parallel::detectCores(),
)
m2.2 = brm(
formula = AUCEC ~ 1 + Algorithm,
data = d,
family=Beta(),
prior = c(
prior(normal(0,0.5), class=Intercept),
prior(normal(0,0.1), class=b),
prior(gamma(0.1, 0.1), class=phi)
),
chains = 4,
cores = parallel::detectCores(),
)
m2.3 = brm(
formula = AUCEC ~ 1 + Algorithm + (1|Project),
data = d,
family=Beta(),
prior = c(
prior(normal(0,0.5), class=Intercept),
prior(normal(0,0.1), class=b),
prior(cauchy(0,0.5), class=sd),
prior(gamma(0.1, 0.1), class=phi)
),
chains = 4,
cores = parallel::detectCores(),
)
m2.4 = brm(
formula = AUCEC ~ 1 + Algorithm + (1|Domain),
data = d,
family=Beta(),
prior = c(
prior(normal(0,0.5), class=Intercept),
prior(normal(0,0.1), class=b),
prior(cauchy(0,0.5), class=sd),
prior(gamma(0.1, 0.1), class=phi)
),
chains = 4,
cores = parallel::detectCores(),
)
m2.5 = brm(
formula = AUCEC ~ 1 + Algorithm + (1|Domain) + (1|Project),
data = d,
family=Beta(),
prior = c(
prior(normal(0,0.5), class=Intercept),
prior(normal(0,0.1), class=b),
prior(cauchy(0,0.5), class=sd),
prior(gamma(0.1, 0.1), class=phi)
),
chains = 4,
cores = parallel::detectCores(),
)
loo2.1 = loo(m2.1)
loo2.2 = loo(m2.2)
loo2.3 = loo(m2.3)
loo2.4 = loo(m2.4)
loo2.5 = loo(m2.5)
loo_compare(loo2.1, loo2.2, loo2.3, loo2.4, loo2.5)
summary(m2.3)
summary(m2.5)
stanplot(m1.3, type="hist")
stanplot(m1.3, type="dens_overlay")
stanplot(m1.3, type="areas")
stanplot(m1.3, type="areas", pars="b_")
# Looks like Linespots is performing significantly worse here.
stanplot(m1.3, type="areas", pars="sd_")
